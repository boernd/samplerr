; -*- mode: clojure; -*-
; vim: filetype=clojure

(load-plugins)
(repl-server {:host "127.0.0.1" :port 1234})

(let [host "0.0.0.0"]
  (tcp-server {:host host :port 8086})
  (udp-server {:host host :port 8086})
  (ws-server {:host host :port 8087})
)

(periodically-expire 120)

(require '[riemann.plugin.samplerr :as samplerr])
(require '[clj-time.core :as t])

(let [elastic      (samplerr/connect "http://localhost:9200")
      index-prefix ".samplerr-"
      alias-prefix "samplerr-"
      cfunc        [{:func samplerr/average :name "avg"}
                    {:func samplerr/minimum :name "min"}
                    {:func samplerr/maximum :name "max"}]
      archives     [{:tf "YYYY.MM.dd" :step (t/seconds 20) :ttl   (t/days 2) :cfunc cfunc}
                    {:tf "YYYY.MM"    :step (t/minutes 10) :ttl (t/months 2) :cfunc cfunc}
                    {:tf "YYYY"       :step    (t/hours 1) :ttl (t/years 10) :cfunc cfunc}]
      rotate       (samplerr/periodically-rotate {:interval (t/days 1) :conn elastic :index-prefix index-prefix :alias-prefix alias-prefix :archives archives})
      persist      (batch 1000 10 (samplerr/persist {:index-prefix index-prefix :index-type "samplerr" :conn elastic}))]

  (streams
    (where (tagged "collectd")
      (by [:host :service]
       (samplerr/down archives persist))))
  rotate)
